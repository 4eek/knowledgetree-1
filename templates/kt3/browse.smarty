
<!-- FILE: kt3/browse.smarty -->
{$context->oPage->requireJSResource('thirdpartyjs/MochiKit/MochiKitPacked.js')}
{$context->oPage->requireJSResource('resources/js/toggleselect.js')}
{$javascript}
{if ($custom_title != null)}
<h2>{$custom_title|sanitize}</h2>
{/if}


{if ($params)}
<div class="collapsible">
<h4 onclick="jQuery('.collapsiblebody').toggle();">{i18n}Parameters{/i18n}</h4>
<div class="collapsiblebody">
{assign var=mainjoin value=$joins.main}

<p class="descriptiveText">{i18n arg_join=$mainjoin}Match <b>#join#</b> of the following{/i18n}:</p>
{foreach from=$params key=key item=group}
{assign var=join value=$joins[$key]}

<b>{i18n}Group{/i18n}</b> ({i18n arg_join=$join}match <b>#join#</b>{/i18n})
<ul>
{foreach from=$group item=param}
<li>{$param}</li>
{/foreach}
</ul>
{/foreach}
</div>
</div>
{/if}
<!-- <link rel="stylesheet" type="text/css" href="{php}echo "{$GLOBALS['default']->rootUrl}/resources/css/newui/browseView.css?".rand();{/php}" />
-->
<form action="{$browseutil->getActionBaseUrl()}" method="post">

{if ($isEditable)}

{if ($context->oFolder)}
<input type="hidden" name="fFolderId" value="{$context->oFolder->getId()}" />
{/if}

{/if}


{if ($isEditable)}
<div class="dropzone" id="datadrop">
{/if}
<div class="standardBorder itemContainer" style="min-width: 800px;">
	{$bulkActionMenu}
	{$folderContents}
	<div style="width:100%; text-align: center">{$pagination}</div>
</div>
{$fragments}
{if ($isEditable)}
</div>
{/if}



{if ($isEditable && 1==2)}
<div class="form_actions">
  <input type="hidden" name="sListCode" value="{$code}" />
  <input type="hidden" name="action" value="bulkaction" />
  <input type="hidden" name="fReturnAction" value="{$returnaction}" />
  <input type="hidden" name="fReturnData" value="{$returndata|sanitize}" />

  {foreach from=$bulkactions item=bulkaction}
      <input type="submit" name="submit[{$bulkaction->getName()}]" value="{$bulkaction->getDisplayName()}" />
  {/foreach}

</div>
{/if}
</form>


{if ($save_fields)}
<form action="{$smarty.server.PHP_SELF}" method="post">
<fieldset>
<legend>{i18n}Edit search{/i18n}</legend>
<p class="descriptiveText">{i18n}To modify this search, press the 'Edit' button.{/i18n}</p>
<input type="hidden" name="action" value="editSearch" />
<input type="hidden" name="boolean_search" value="{$boolean_search}" />
<div class="form_actions">
<input type="submit" name="submit" value="{i18n}Edit{/i18n}" />
</div>
</fieldset>
</form>

<form action="{$smarty.server.PHP_SELF}" method="post">
<fieldset>
<legend>{i18n}Save this search{/i18n}</legend>
<p class="descriptiveText">{i18n}To save this search permanently, so that you can run it again at any time, fill in a name below and click 'Save'.{/i18n}</p>
<input type="hidden" name="action" value="saveSearch" />
<input type="hidden" name="boolean_search" value="{$boolean_search|sanitize}" />
{foreach item=oWidget from=$save_fields}
    {$oWidget->render()}
{/foreach}
<div class="form_actions">
<input type="submit" name="submit" value="{i18n}Save{/i18n}" />
</div>
</fieldset>
</form>

{/if}

{* we break encapsulation pretty badly here. *}
{literal}
<script>
(function($){

	kt.lib.str_replace=function(search, replace, subject, count){
	    var i = 0, j = 0, temp = '', repl = '', sl = 0, fl = 0,
	            f = [].concat(search),
	            r = [].concat(replace),
	            s = subject,
	            ra = r instanceof Array, sa = s instanceof Array;
	    s = [].concat(s);
	    if (count) {
	        this.window[count] = 0;
	    }

	    for (i=0, sl=s.length; i < sl; i++) {
	        if (s[i] === '') {
	            continue;
	        }
	        for (j=0, fl=f.length; j < fl; j++) {
	            temp = s[i]+'';
	            repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
	            s[i] = (temp).split(f[j]).join(repl);
	            if (count && s[i] !== temp) {
	                this.window[count] += (temp.length-s[i].length)/f[j].length;}
	        }
	    }
	    return sa ? s : s[0];
	};


	kt.lib.parseTemplate=function(str,obj){
		str=str+'';
		var fr=new Array();
		var to=new Array();
		if(typeof(obj)=='object'){
			for(var item in obj){
				fr[fr.length]='['+item+']';
				to[to.length]=obj[item]+'';
			}

		}
		return kt.lib.str_replace(fr,to,str);
	};

	kt.pages.browse={};

	kt.pages.browse.addDocumentItem=function(item){
		item.is_shortcut=item.is_shortcut?'':' not_supported';
		item.is_immutable=item.is_immutable?'':' not_supported';
		item.is_checkedout=item.is_checkedout?'':' not_supported';
		//item.document_link='view.php?fDocumentId='+item.id;
		item.document_link=item.document_url;

		var newItem=jQuery(jQuery('.fragment.document')[0]).html();
		newItem=kt.lib.parseTemplate(newItem,item);
		var elem=jQuery(newItem);
		var mime=jQuery('.doc.icon',elem).attr('style',item.mimeicon);
		jQuery('.page.page_'+kt.pages.browse.curPage).append(elem);
	};


	kt.pages.browse.curPage=1;
	kt.pages.browse.viewPage=function(pageNum){
		if(pageNum<1)pageNum=1;
		var pageItem=jQuery('.paginate>li.page_'+pageNum);

		if(pageItem.length<=0){
			return;
		}

		jQuery('.page').hide(0,function(){jQuery('.page.page_'+pageNum).show(0);})
		jQuery('.paginate>li.item').removeClass('highlight');

		pageItem.addClass('highlight');

		kt.pages.browse.curPage=new Number(pageNum);
	};

	kt.pages.browse.nextPage=function(){
		kt.pages.browse.viewPage(kt.pages.browse.curPage+1);
		return false;
	};

	kt.pages.browse.prevPage=function(){
		kt.pages.browse.viewPage(kt.pages.browse.curPage-1);
		return false;
	};

	kt.pages.browse.selectAllItems=function(){
		jQuery('.itemContainer .item .checkbox>input:checkbox:enabled').each(function(){
			if(!this.checked)jQuery(this).click();
			jQuery(this).parents('.item').addClass('highlighted');
		});
		kt.pages.browse.setBulkActionMenuStatus();
		return false;
	}

	kt.pages.browse.deSelectAllItems=function(){
		jQuery('.itemContainer .item .checkbox>input:checkbox:enabled').each(function(){
			if(this.checked)jQuery(this).click();
			jQuery(this).parents('.item').removeClass('highlighted');
		});
		kt.pages.browse.setBulkActionMenuStatus();
		return false;
	}

	kt.lib.shortcut.add("ctrl+right",kt.pages.browse.nextPage);
	kt.lib.shortcut.add("ctrl+left",kt.pages.browse.prevPage);
	kt.lib.shortcut.add("ctrl+a",kt.pages.browse.selectAllItems);
	kt.lib.shortcut.add("ctrl+shift+a",kt.pages.browse.deSelectAllItems);


	$(document).ready(function(){
		kt.pages.browse.viewPage(1);
		kt.pages.browse.setBulkActionMenuStatus=function(){
			var selectedItems=$(".itemContainer .item .checkbox>input:checkbox:checked:enabled").length;
			if( selectedItems >0){
				$('.browseView.bulkActionMenu td:first-child').removeClass('disabled');
				$('.browseView.bulkActionMenu td:first-child input[type="submit"]').attr('disabled','');
//				$('.browseView.bulkActionMenu').slideDown(350,function(){kt.lib.setFooter();});
//				$('.browseView.bulkActionMenu').slideDown(350);

				$('.browseView.bulkActionMenu .status').html(selectedItems + '&nbsp;Item(s)&nbsp;Selected');
			}else{
				$('.browseView.bulkActionMenu td:first-child').addClass('disabled');
				$('.browseView.bulkActionMenu td:first-child input[type="submit"]').attr('disabled','disabled');
//				$('.browseView.bulkActionMenu').hide(200);
//				$('.browseView.bulkActionMenu').hide(200,function(){kt.lib.setFooter();});
				$('.browseView.bulkActionMenu .status').html('');
			}
		}

		$('.actionIcon.comments').click(function(){
		    var docItem=$(this).parents('.item')[0];
		    var thisField=$('.expanderField',docItem);
		    $('.expanderField').not(thisField[0]).hide();
		    thisField.toggle();
		});

		$("table.doc.item input:checkbox").click(function() {
			kt.pages.browse.setBulkActionMenuStatus();

			if ($(this).is(':checked')) {
				$(this).parent().parent().parent().parent().addClass("highlighted");
			} else {
				$(this).parent().parent().parent().parent().removeClass("highlighted");
			}

		});

		$("table.doc.item input:checkbox:checked").parent().parent().parent().parent().addClass("highlighted");

		$("table.folder.item input:checkbox").click(function() {
			kt.pages.browse.setBulkActionMenuStatus();

			if ($(this).is(':checked')) {
				$(this).parent().parent().parent().parent().addClass("highlighted");
			} else {
				$(this).parent().parent().parent().parent().removeClass("highlighted");
			}

		});

		$("table.folder.item input:checkbox:checked").parent().parent().parent().parent().addClass("highlighted");

		if($.browser.msie){
			(function(){
				function hide(){
					$(".doc.browseView:first-child .item .actionMenu .actions>ul").css({display: '',visibility: ''});
				}

				$(".doc.browseView:first-child .item .actionMenu .actions>ul").css({display: 'block',visibility: 'hidden'});
				setTimeout(hide,200);
			})();
		}

		kt.pages.browse.setBulkActionMenuStatus();

		$(".browseView.bulkActionMenu .select_all").change(function(){
			if(this.checked){
				kt.pages.browse.selectAllItems();
			}else{
				kt.pages.browse.deSelectAllItems();
			}
		});

        if ($('ul.paginate li.item').length==3) {
            $('ul.paginate').hide();
        }

	});
})(jQuery);
</script>
{/literal}
{$ktOlarkPopup}

<!-- FILE_END: kt3/fieldsets/browse.smarty -->
